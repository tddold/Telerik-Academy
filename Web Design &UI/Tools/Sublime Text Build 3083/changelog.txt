<style>
html { background-color: #f6f6f6; }
body { font-family: monospace; }
li { margin: 2px; }
h2 { color: #333; font-size: 2.0em; margin: 0; }
.release-date, .forum-link { font-size: 10pt }
</style>

<h2>Build 3083</h2>
<div class="release-date">Release Date: 26 March 2015</div>
<ul>
    <li>Fixed high CPU usage caused by a corrupt index. This was was occuring for some users upgrading from 3065</li>
    <li>Added setting <tt>index_workers</tt> to control the number of threads used for file indexing. By default the number of threads is based on the number of CPU cores. By setting <tt>index_workers</tt> to 1 or 2, indexing will be slower, but less intrusive</li>
    <li>Fixed a crash when showing the Command Palette with an empty .sublime-build file</li>
    <li>Tab completion no longer completes numbers. <i>Edit/Show Completions</i> can still be used for this</li>
</ul>

<h2>Build 3080</h2>
<div class="release-date">Release Date: 24 March 2015</div>
<div class="forum-link">See also the <a href="http://www.sublimetext.com/blog/articles/sublime-text-3-build-3080">Blog Post</a></div>
<ul>
    <li>Fixed Redo sometimes restoring the selection to the incorrect location</li>

    <li>Reworked how Build Systems are selected (<a href="http://www.sublimetext.com/forum/viewtopic.php?f=2&t=17471">More Information</a>) </li>
    <li>Build Systems may now declare "keyfiles" (e.g., 'Makefile' for the Make build system) to better auto detect which build system to use</li>
    <li>Improved handling of build systems that generate lots of output</li>
    <li>New windows always use the automatic build system, rather than the build system of the last used window</li>

    <li>Command Palette now remembers the last entered string</li>
    <li>Improved change detection for files that disappear and reappear, as happens with disconnected network drives</li>
    <li><tt>atomic_save</tt> is disabled by default</li>

    <li>Right clicking on a URL will show an "Open URL" menu item</li>
    <li>Added Goto Definition to the context menu</li>
    <li>Improved behavior of Goto Definition when using multiple panes</li>

    <li>Misspelled words can now be added to the dictionary, in addition to being ignored</li>
    <li>Fixed Ignored Words not persisting after exiting</li>
    <li>Fixed a long standing issue with spell checking and non-ascii characters</li>
    <li>Added spelling_selector setting, to control what text is checked for misspellings</li>
    <li>Tweaked handling of syntax definitions and unused captures, resolving an issue with spell checking in Markdown links.</li>

    <li>Goto Anything supports :line:col syntax in addition to :line</li>
    <li>Added Edit Project to the Command palette</li>
    <li>Improved quote auto pairing logic</li>
    <li>Added &lt;current file&gt; option to Find in Files</li>
    <li>Improved Console Panel scrolling behavior</li>
    <li>.tmLanguage files may contain a hidden setting, to indicate they shouldn't be displayed to the user</li>
    <li>Improved some error messages when parsing .tmLanguage files</li>
    <li><tt>remember_open_files</tt> setting is now defaults to false. Note that this change will have no effect if the <tt>hot_exit</tt> setting is left at its default value of true</li>
    <li>Added auto_complete_cycle setting</li>

    <li>Fixed Minimap refusing to draw on very large windows</li>
    <li>Fixed not being able to click on the selected row of the auto complete popup</li>
    <li>Fixed sidebar icons sometimes being invisible on startup</li>
    <li>Transient sheets (e.g., as created by Goto Anything when previewing files) are no longer added to the Recently Closed list</li>
    <li>Improved scrolling behavior when <tt>line_padding_top</tt> is &gt; 0</li>
    <li>Fixed a bug with scrolling tabs, where a 1 pixel line would occasionally appear underneath them</li>
    <li>Fixed tabset background being set to the wrong color on startup if different colored tabs are used</li>
    <li>Updated to a never version of leveldb, fixing constant low level CPU usage if the index becomes corrupted</li>
    <li>Fixed a crash that could occur when directories are being rapidly deleted and recreated</li>
    <li>Fixed a crash that occurred when dragging rows scrolled out of view in the side bar</li>
    <li>Fixed a long standing plugin_host crash triggered via modal dialogs</li>
    <li>Fixed a typo in the "Save Workspace As" dialog</li>
    <li>Fixed incorrect menu mnemonics</li>

    <li>Linux: Added sudo save</li>

    <li>Windows: Popup windows are able to receive scroll wheel input</li>
    <li>Windows: subl.exe command line helper accepts wildcards</li>
    <li>Windows: Fixed access denied errors that could occur when saving with <tt>atomic_save</tt> disabled</li>
    <li>Windows: Added workaround for broken <tt>std::condition_variable</tt> in MSVC 2012, fixing a crash in <tt>plugin_host</tt></li>
    <li>Windows: Added more descriptive errors when the Update Installer fails to rename a folder</li>
    <li>Windows: Fixed incorrect window sizing after making a maximised window full screen</li>

    <li>OSX: Added work around for performActionForItemAtIndex: taking an excessively long time in Yosemite. This affected any commands that had a corresponding menu item.</li>
    <li>OSX: Workaround for an OS issue with zero size windows and OpenGL views</li>
    <li>OSX: subl command line tool no longer uses Distributed Objects, resolving some intermittent failures</li>

    <li>Posix: Fixed new files not respecting the umask permission flags</li>

    <li>API: Added View.show_popup() and related functions</li>
    <li>API: Added sublime.yes_no_cancel_dialog()</li>
    <li>API: Added sublime.expand_variables()</li>
    <li>API: Added Window.extract_variables()</li>
    <li>API: Added Sheet.view()</li>
    <li>API: Window.show_quick_panel() now accepts the flag sublime.KEEP_OPEN_ON_FOCUS_LOST</li>
    <li>API: Window.show_quick_panel() will now scroll to the selected item when shown</li>
    <li>API: Fixed on_post_window_command() not getting called</li>
</ul>

<h2>Build 3065</h2>
<div class="release-date">Release Date: 27 August 2014</div>
<ul>
    <li>Added sidebar icons</li>
    <li>Added sidebar loading indicators</li>
    <li>Sidebar remembers which folders are expanded</li>
    <li>Tweaked window closing behavior when pressing ctrl+w / cmd+w</li>
    <li>Improved quote auto pairing logic</li>
    <li>Selected group is now stored in the session</li>
    <li>Added remember_full_screen setting</li>
    <li>Fixed a lockup when transitioning from a blinking to a solid caret</li>
    <li>Fixed a crash in plugin_host</li>
    <li>Fixed a crash triggered by Goto Anything cloning views</li>
    <li>Windows: Added command line helper, subl.exe</li>
    <li>OSX: Added 'New Window' entry to dock menu</li>
    <li>Posix: Using correct permissions for newly created files and folders</li>
    <li>API: Updated to Python 3.3.3</li>
</ul>

<h2>Build 3059</h2>
<div class="release-date">Release Date: 17 December 2013</div>
<ul>
    <li>Added tab scrolling, controlled by the enable_tab_scrolling setting</li>
    <li>Added image preview when opening images</li>
    <li>Encoding and line endings can be displayed in the status bar with the show_encoding and show_line_endings settings</li>
    <li>Added settings caret_extra_top, caret_extra_bottom and caret_extra_width to control the caret size</li>
    <li>Added index_exclude_patterns setting to control which files get indexed</li>
    <li>Automatically closing windows when the last tab is dragged out</li>
    <li>Changed tab close behavior: the neighboring tab is now always selected</li>
    <li>When the last file is closed, a new transient file is created automatically</li>
    <li>Ctrl+Tab ordering is stored in the session</li>
    <li>Added minimap_scroll_to_clicked_text setting</li>
    <li>Improved error messages when unable to save files</li>
    <li>Auto complete now works as expected in macros</li>
    <li>Minor improvements to Python syntax highlighting</li>
    <li>Vintage: A block caret is now used</li>
    <li>Vintage: Improved behavior of visual line mode with word wrapped lines</li>
    <li>Find in Files will no longer block when FIFOs are encountered</li>
    <li>Linux: Added menu hiding</li>
    <li>Linux: Fixed incorrect handling of double clicks in the Find panel</li>
    <li>Linux: Fixed incorrect underscore display in some menus</li>
    <li>Posix: Fixed new files being created with unexpected permissions</li>
    <li>Windows: SSE support is no longer required for 32 bit builds</li>
    <li>API: Window.open_file now accepts an optional group parameter</li>
    <li>API: Plugins may now call Settings.clear_on_change() within a callback from Settings.add_on_change()</li>
    <li>API: Calling Settings.add_on_change() from within a settings change callback won't cause the added callback to be run</li>
</ul>

<h2>Build 3047</h2>
<div class="release-date">Release Date: 27 June 2013</div>
<ul>
    <li>Beta is now open to non-registered users</li>
    <li>Windows and Linux: Added High DPI support</li>
    <li>Improved file change detection</li>
    <li>Improved rendering performance</li>
    <li>HTML tag auto completion is better behaved in script tags</li>
    <li>Fixed a crash on exit that could occur when hot_exit is disabled</li>
    <li>Linux and OSX: atomic_save is adaptively disabled when it's not possible to preserve file permissions</li>
    <li>OSX: Fixed context menus not working when the application is in the background</li>
    <li>Windows: Auto updater supports updating from unicode paths</li>
    <li>API: Plugins in zip files are able to be overridden via files on disk</li>
    <li>API: Added support for the termios module on Linux and OS X</li>
    <li>API: Fixed Selection.contains</li>
    <li>API: Fixed settings objects getting invalidated too early with cloned views</li>
</ul>

<h2>Build 3033</h2>
<div class="release-date">Release Date: 7 May 2013</div>
<ul>
    <li>New auto update system for Windows and OS X</li>
    <li>Previewing a file from the side bar will no longer add an entry to the OPEN FILES section of the side bar</li>
    <li>Added Paste from History</li>
    <li>Added setting 'auto_find_in_selection', for S2 style Find in Selection logic</li>
    <li>Find panel has a drop down arrow to select previous items</li>
    <li>Pressing right in the Goto Anything overlay will open the selected file without closing the overlay</li>
    <li>Fixed several crash bugs</li>
    <li>Further startup time improvements</li>
    <li>Improved HTML completions when typing outside of tags</li>
    <li>Fixed Close Tag not respecting self closing tags</li>
    <li>PHP: Improved auto indenting for the alternative control syntax</li>
    <li>Added setting always_prompt_for_file_reload</li>
    <li>Improved handling of deleted files when restoring sessions</li>
    <li>Deleting a file via the side bar will first close the corresponding view, if any</li>
    <li>"Remove all Folders from Project" now prompts to confirm</li>
    <li>Added telemetry. Telemetry is disabled by default, but can be turned on with the enable_telemetry setting</li>
    <li>Using Google Breakpad to automatically report crashes</li>
    <li>Updated syntax highlighting for PHP, Haskell and Pascal</li>
    <li>Symlinks are followed by default in folders added to the side bar</li>
    <li>Windows: Fixed erroneous entries in system menu</li>
    <li>Windows: New style Open Folder dialogs are used on Vista and later</li>
    <li>API: Significantly improved communication speed with plugin_host</li>
    <li>API: Added view.close()</li>
    <li>API: Added view.show_popup_menu()</li>
    <li>API: Added is_valid() method to view and window, to determine if the handle has been invalidated</li>
    <li>API: Added on_post_text_command and on_post_window_command</li>
    <li>API: on_text_command and on_window command are now called when the menu is used</li>
    <li>API: Added sublime.get_macro()</li>
    <li>API: view.substr(point) now has the same semantics as S2 for out of bounds addresses</li>
    <li>API: view.command_history(0, True) now returns the last modifying command, as expected</li>
</ul>

<h2>Build 3021</h2>
<div class="release-date">Release Date: 14 March 2013</div>
<ul>
    <li>Linux: Fixed atomic_save working incorrectly with symlinks</li>
    <li>Windows: Fixed a crash under Windows 7 x64</li>
    <li>Fixed a crash that could occur on file open</li>
</ul>

<h2>Build 3019</h2>
<div class="release-date">Release Date: 12 March 2013</div>
<ul>
    <li>Added Jump Back and Jump Forward commands, available from the Goto menu</li>
    <li>HTML: Improved completions and auto indent</li>
    <li>HTML: Tags are closed when &lt;/ is entered. This is controlled by the auto_close_tags setting</li>
    <li>Smarter word navigation</li>
    <li>File saves are atomic. This can be disabled with the atomic_save setting</li>
    <li>Find and Replace panels automatically resize when multi line strings are entered</li>
    <li>Faster loading of large, plain text files</li>
    <li>Improved console scrolling performance on high resolution displays</li>
    <li>Improved handling of files with extremely long lines</li>
    <li>Minimap view rectangle auto hides (controlled by the always_show_minimap_viewport setting)</li>
    <li>Indexing: Added detection of stuck workers</li>
    <li>Updated C# package</li>
    <li>Added invert_selection command</li>
    <li>CSS: Completions will not be offered when typing in selectors</li>
    <li>Fixed Reveal in Side Bar</li>
    <li>Fixed C++ syntax highlighting for nested class forward declarations</li>
    <li>Exec panel scrolls again</li>
    <li>OSX: Added support for line numbers sent via apple events</li>
    <li>Windows: ok_cancel_dialog uses new visual styles</li>
    <li>Linux: Using the correct version number for the deb files</li>
    <li>API: Added on_text_command() and on_window_command()</li>
    <li>API: Added load_resource(), load_binary_resource() and find_resources()</li>
    <li>API: Added encode_value() and decode_value()</li>
    <li>API: view.sel() supports negative indices</li>
    <li>API: Implemented settings.add_on_change() and settings.clear_on_change()</li>
    <li>API: view.add_regions() will accept package relative paths for the icon</li>
    <li>API: view.add_regions() can show underlines</li>
    <li>API: Added on_pre_close() callback</li>
    <li>API: view.window() will now work even if the view isn't frontmost</li>
</ul>

<h2>Build 3012</h2>
<div class="release-date">Release Date: 10 February 2013</div>
<ul>
    <li>Fixed a syntax highlighting regression in 3011</li>
</ul>

<h2>Build 3011</h2>
<div class="release-date">Release Date: 9 February 2013</div>
<ul>
    <li>Improved protection against degenerate syntax definitions</li>
    <li>Linux: Fixed version incompatibilities with <tt>libffi</tt></li>
    <li>OSX: Fixed <tt>exec</tt> command on 10.7</li>
    <li>OSX: Fixed incompatibility between Dictionary lookup and <tt>gpu_window_buffer</tt></li>
    <li>Objective-C: Improved symbol indexing</li>
    <li>API: Plugins may import modules from <tt>plugin_loaded()</tt></li>
    <li>API: <tt>sublime.version()</tt>, <tt>sublime.platform()</tt>, <tt>sublime.architecture()</tt>, and <tt>sublime.channel()</tt> may now be used before <tt>plugin_loaded()</tt> is called</li>
    <li>API: Added <tt>view.command_history()</tt></li>
</ul>

<h2>Build 3010</h2>
<div class="release-date">Release Date: 3 February 2013</div>
<ul>
    <li>OSX: Buttery smooth scrolling on Retina displays</li>
    <li>Symbol Indexing: fixed degenerate behavior that could cause an explosion in the number of worker processes</li>
    <li>Symbol Indexing: less worker processes are used, to be more unobtrusive</li>
    <li>Symbol Indexing: better handling of binary files</li>
    <li>OSX: Control+C will cancel the current build</li>
    <li>API: <tt>view.insert()</tt> returns the number of characters inserted</li>
</ul>

<h2>Build 3009</h2>
<div class="release-date">Release Date: 1 February 2013</div>
<ul>
    <li>Improved symbol indexing for Ruby</li>
    <li>OSX: Reduced CPU usage when <tt>gpu_window_buffer</tt> is enabled</li>
    <li>Symbol Indexing works on Windows XP</li>
    <li>Can monitor indexing behavior by entering <tt>sublime.log_indexing(True)</tt> in the console</li>
    <li>Tweaked brace matching logic</li>
    <li>Removed undesirable animation during startup</li>
    <li>API: Added _ssl module on OS X and Windows</li>
    <li>API: Fixed ctypes regression in 3008 on OS X</li>
    <li>API: Plugins can define <tt>plugin_loaded()</tt> and <tt>plugin_unloaded()</tt> module functions. <tt>plugin_loaded()</tt> will be called when the API is ready to use.</li>
    <li>API: Added view.find_by_class()</li>
    <li>API: Added view.expand_by_class()</li>
    <li>API: Fixed <tt>on_new_async()</tt></li>
    <li>API: Tweaking handling of <tt>show_quick_panel</tt> when items is a mixed list of strings and sequences</li>
</ul>

<h2>Build 3008</h2>
<div class="release-date">Release Date: 30 January 2013</div>
<ul>
    <li>Fixed <i>Open all with current extension as</i></li>
    <li>Fixed the <i>Tools/Macros</i> menu</li>
    <li>Linux: Restored compatibility with older glibc versions</li>
    <li>Linux: Added Installed-Size field to the <tt>.deb</tt></li>
    <li>API: urllib.request can be imported on OS X</li>
    <li>API: Fixed missing _socket module on 32 bit Windows</li>
</ul>

<h2>Build 3007</h2>
<div class="release-date">Release Date: 30 January 2013</div>
<ul>
    <li>OSX: Fixed extraneous dock icons</li>
    <li>Added Symbol Indexing support for Scala</li>
    <li>Fixed crash that could occur when using Goto Anything</li>
    <li>Fixed the <tt>ignored_packages</tt> setting not working correctly with zipped packages</li>
    <li>Vintage: Fixed 'o' and 'O'</li>
    <li>API: Fixed <tt>on_query_completions</tt> not working correctly in some circumstance</li>
    <li>API: Re-added <tt>view.score_selector</tt></li>
    <li>API: Selection.add() no longer ignores the xpos</li>
</ul>

<h2>Build 3006</h2>
<div class="release-date">Release Date: 29 January 2013</div>
<ul>
    <li>Added Goto Definition, and Goto Symbol in Project</li>
    <li>Significantly improved startup time</li>
    <li>Significantly improved Replace All performance</li>
    <li>Improved matching algorithm used for Goto Anything and Autocomplete, now accepts transposed characters</li>
    <li>UI: Enhanced pane management</li>
    <li>UI: Previewing files from the sidebar creates a preview tab</li>
    <li>UI: Improved animation in the side bar</li>
    <li>Projects: Multiple workspaces can be created for a single project</li>
    <li>Projects: When adding folders to the sidebar, symlinks are not followed by default. This can be changed by enabling follow_symlinks in the project.</li>
    <li>Build Systems: Added 'shell_cmd', which supersedes 'cmd', with more intuitive syntax</li>
    <li>Build Systems: Better PATH handling behavior on OS X when using shell_cmd.</li>
    <li>Build Systems: 'Make' build system has an improved error message regex</li>
    <li>Build Systems: Syntax file can be specified for the output</li>
    <li>Build Systems: Word wrap is enabled by default</li>
    <li>Find in Files: Improved handling of binary files</li>
    <li>Find in Files: Line numbers are hidden in the output</li>
    <li>Find: Find in Selection will no longer be automatically selected</li>
    <li>Find: Removed Reverse option</li>
    <li>OSX: Improved performance on Retina displays</li>
    <li>OSX: 10.7 or later is required</li>
    <li>OSX: 64 bit only</li>
    <li>OSX: System version of Python is no longer a dependency</li>
    <li>OSX: Italic fonts are synthesized when not available in the typeface</li>
    <li>Linux: .deb files are provided</li>
    <li>Linux: Starting from the command line will daemonize the process by default</li>
    <li>API: Upgraded from Python 2.6 to Python 3.3</li>
    <li>API: Plugins run out-of-process</li>
    <li>API: Plugin API is now threadsafe</li>
    <li>API: Some API events are now run asynchronously</li>
    <li>API: begin_edit() / end_edit() are no longer accessible</li>
    <li>API: Projects are exposed to the API</li>
    <li>API: Added window.settings() and window.template_settings()</li>
    <li>API: show_quick_panel accepts an on_highlighted callback</li>
</ul>
